PREFIX : @schemaUri

CONSTRUCT {
    ?group
    	a :Group ;
    	a ?class ;
    	:groupName ?groupName ;
    	:groupStartDate ?groupStartDate ;
    	:formalBodyHasParentFormalBody ?parentformalBody ;
    	:formalBodyHasChildFormalBody ?childformalBody ;
    	:formalBodyRemit ?bodyRemit ;
    	:formalBodyHasLeadHouse ?leadHouse ;
    	a :FormalBody ;
    	:formalBodyName ?formalBodyName ;
    	:formalBodyStartDate ?formalbodystartDate ;
    	:formalBodyHasContactPoint ?formalbodycontactpoint ;
    	:formalBodyHasFormalBodyMembership ?formalBodyMembership ;
    	:formalBodyHasHouse ?house ;
    	a ?parliamentaryCommittee ;
    	a ?selectCommittee ;
    	:formalBodyHasFormalBodyChair ?bodyChair ;
    	:memberCount ?memberCount ;
    .
    ?formalBodyMembership
        a :FormalBodyMembership ;
    	a ?exOfficioMembership ;
    	a ?alternateMembership ;
    	:formalBodyMembershipHasPerson ?formalBodyPerson ;
	.
    ?formalbodycontactpoint
        a :ContactPoint ;
	:email ?email ;
	:phoneNumber ?phoneNumber ;
    .
    ?house
        a :House ;
	:houseName ?houseName ;
    	:houseHasContactPoint  ?contactpoint ;
    .
    ?contactpoint
      	a :ContactPoint ;
      	:contactPointHasPostalAddress ?postalAddress ;
    .
    ?postalAddress
      	a :PostalAddress ;
    	:addressLine1 ?address1 ;
    	:addressLine2 ?address2 ;
    	:addressLine3 ?address3 ;
	:addressLine4 ?address4 ;
	:addressLine5 ?address5 ;
	:postCode ?postCode ;
    .
    ?formalBodyPerson
      	a :Person ;
	:personFamilyName ?formalBodyPersonFamilyName ;
    	:personGivenName ?formalBodyPersonGivenName ;
    	<http://example.com/F31CBD81AD8343898B49DC65743F0BDF> ?formalBodyPersonDisplayAs ;
    	<http://example.com/A5EE13ABE03C4D3A8F1A274F57097B6C> ?formalBodyPersonListAs ;
    	:memberHasMemberImage ?image ;
    	:memberHasParliamentaryIncumbency ?parlIncumbency ;
    	:partyMemberHasPartyMembership ?partyMembership ;
    .
    ?image
    	a :MemberImage .

    ?parlIncumbency
	a :SeatIncumbency ;
	:seatIncumbencyHasHouseSeat ?houseSeat ;
	:parliamentaryIncumbencyStartDate ?parlincumbencyStartDate ;
	:parliamentaryIncumbencyEndDate ?parlIncumbencyEndDate ;
    .
    ?houseSeat
    	a :HouseSeat ;
	:houseSeatHasConstituencyGroup ?constituencyGroup ;
	:houseSeatHasHouse ?house ;
    .
    ?constituencyGroup
    	a :Constituency ;
	:constituencyGroupName ?constituencyGroupName ;
    .
    ?partyMembership
    	a :PartyMembership ;
	:partyMembershipHasParty ?party ;
    .
    ?party
    	a :Party ;
	:partyName ?partyName ;
    .
    ?bodyChair
  	a :Position ;
	:positionHasIncumbency ?bodyChairIncumbency ;
    .
    ?bodyChairIncumbency
	a :Incumbency ;
	:incumbencyStartDate ?bodyChairIncumbencystartDate ;
	:incumbencyHasPerson ?formalBodyChairperson ;
    .
}
WHERE {
	{
		SELECT * WHERE {
			BIND(@group_id AS ?group)
		    ?group
		    	a :Group ;
		    	a ?class ;
		    .
			OPTIONAL {
		    	?group
				:groupName ?groupName ;
		    		:groupStartDate ?groupStartDate ;
		    	.
		  		OPTIONAL { ?group :formalBodyHasParentFormalBody ?parentformalBody} .
		  		OPTIONAL { ?group :formalBodyHasChildFormalBody ?childformalBody } .
		  		OPTIONAL { ?group :formalBodyRemit ?bodyRemit } .
			}
		    OPTIONAL {
		        OPTIONAL {
				?group :formalBodyHasLeadHouse ?leadHouse .
				BIND (?leadHouse AS ?house)
		        }
		    	?group
				a :FormalBody;
				:formalBodyName ?formalBodyName ;
				:formalBodyStartDate ?formalbodystartDate ;
				:formalBodyHasContactPoint ?formalbodycontactpoint ;
				:formalBodyHasFormalBodyMembership ?formalBodyMembership ;
				:formalBodyHasHouse ?house ;
		    	.
		    	OPTIONAL {
				bind(:ExOfficioMembership as ?exOfficioMembership)
				?formalBodyMembership a ?exOfficioMembership.
		        }
		    	OPTIONAL {
				bind(:AlternateMembership as ?alternateMembership)
				?formalBodyMembership a ?alternateMembership.
		    	}
		    OPTIONAL {
			FILTER NOT EXISTS { ?formalBodyMembership :formalBodyMembershipEndDate ?membershipEndDate } .
		    }
		 	    OPTIONAL {
				bind(:ParliamentaryCommittee as ?parliamentaryCommittee)
				?group a ?parliamentaryCommittee.
			    }
		    	    OPTIONAL {
		    		bind(:SelectCommittee as ?selectCommittee)
		    		?group a ?selectCommittee .
		    	    }
		    	OPTIONAL { ?formalbodycontactpoint :email ?email } .
		    	OPTIONAL { ?formalbodycontactpoint :phoneNumber ?phoneNumber } .
		    	?house
            			a :House ;
		    		:houseName ?houseName ;
		    		:houseHasContactPoint  ?contactpoint ;
		    	.
		    	?contactpoint :contactPointHasPostalAddress ?postalAddress .
		    	OPTIONAL { ?postalAddress :addressLine1 ?address1 } .
		    	OPTIONAL { ?postalAddress :addressLine2 ?address2 } .
		    	OPTIONAL { ?postalAddress :addressLine3 ?address3 } .
		    	OPTIONAL { ?postalAddress :addressLine4 ?address4 } .
		    	OPTIONAL { ?postalAddress :addressLine5 ?address5 } .
		    	OPTIONAL { ?postalAddress :postCode ?postCode } .
		    	?formalBodyMembership :formalBodyMembershipHasPerson ?formalBodyPerson .
			OPTIONAL {
			    	?formalBodyPerson
              				a :Person ;
			    		:personFamilyName ?formalBodyPersonFamilyName ;
			    		:personGivenName ?formalBodyPersonGivenName ;
			    		<http://example.com/F31CBD81AD8343898B49DC65743F0BDF> ?formalBodyPersonDisplayAs ;
			    		<http://example.com/A5EE13ABE03C4D3A8F1A274F57097B6C> ?formalBodyPersonListAs ;
			    	.
			    	OPTIONAL { ?formalBodyPerson :memberHasMemberImage ?image . }
			    	OPTIONAL {
			    		?formalBodyPerson :memberHasParliamentaryIncumbency ?parlIncumbency  .
			    		?parlIncumbency
			    			a :SeatIncumbency ;
			    			:seatIncumbencyHasHouseSeat ?houseSeat ;
			    			:parliamentaryIncumbencyStartDate ?parlincumbencyStartDate ;
			    		.
			    		OPTIONAL { ?parlIncumbency :parliamentaryIncumbencyEndDate ?parlIncumbencyEndDate } .
			    		OPTIONAL { ?houseSeat :houseSeatHasHouse ?house } .
              				OPTIONAL {
                				?houseSeat :houseSeatHasConstituencyGroup ?constituencyGroup .
			    			?constituencyGroup
                  					a :Constituency ;
                  					:constituencyGroupName ?constituencyGroupName .
			    			FILTER NOT EXISTS { ?constituencyGroup :constituencyGroupEndDate ?constituencygroupEndDate } .
			    		}
			    	}
			    	OPTIONAL {
			    		?formalBodyPerson :partyMemberHasPartyMembership ?partyMembership .
			    		?partyMembership
                				a :PartyMembership ;
                				:partyMembershipHasParty ?party .
			    		?party
                				a :Party ;
                				:partyName ?partyName .
			    		FILTER NOT EXISTS { ?partyMembership :partyMembershipEndDate ?partyMembershipEndDate } .
			    	}
			    }
			    OPTIONAL {
			    	?group :formalBodyHasFormalBodyChair ?bodyChair .
			    	?bodyChair
              				:positionHasIncumbency ?bodyChairIncumbency .
			    		?bodyChairIncumbency
			    		:incumbencyStartDate ?bodyChairIncumbencystartDate ;
			    		:incumbencyHasPerson ?formalBodyChairperson ;
			    	.
			    	FILTER NOT EXISTS { ?bodyChairIncumbency :incumbencyEndDate ?bodyChairIncumbencyEndDate } .
			    }
			}
		}
	}
    UNION
    {
        SELECT ?group (COUNT(?formalBodyMembership) AS ?memberCount)
        WHERE {
            BIND(@group_id AS ?group)
            ?group :formalBodyHasFormalBodyMembership ?formalBodyMembership .
            MINUS { ?formalBodyMembership a :PastFormalBodyMembership } .
        }
        GROUP BY ?group
    }
}
